{"ast":null,"code":"var _jsxFileName = \"/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/process.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { VideoCameraIcon, SparklesIcon } from \"@heroicons/react/outline\";\nimport ReactPlayer from \"react-player\";\nimport VideoDropZone from \"./videoDropZone.jsx\";\nimport VideoEditor from \"./videoEditor.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Process = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Inputs for silence detection\n  const [noiseLevel, setNoiseLevel] = useState(\"-40\");\n  const [silenceDuration, setSilenceDuration] = useState(\"2\");\n\n  // Metadata fields for the video\n  const [videoMetadata, setVideoMetadata] = useState({\n    videoDuration: null,\n    processingTime: null,\n    cutsMade: null,\n    requestId: null,\n    originalFilePath: null,\n    editedFilePath: null,\n    silenceDetails: [],\n    fileSize: null,\n    tags: []\n  });\n  const handleFilesAdded = files => {\n    const newVideos = files.map(file => ({\n      file,\n      url: URL.createObjectURL(file)\n    }));\n    setVideos([...videos, ...newVideos]);\n  };\n  const handleSilenceVideo = async () => {\n    if (!selectedVideo) {\n      setErrorMessage(\"No video selected. Please select a video to process.\");\n      return;\n    }\n    const videoObject = videos.find(video => video.url === selectedVideo);\n    if (!videoObject) {\n      setErrorMessage(\"Selected video not found. Please try again.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"name\", videoObject.file);\n    formData.append('noiseLevel', noiseLevel);\n    formData.append('silenceDuration', silenceDuration);\n    setIsProcessing(true);\n    setErrorMessage(null);\n    try {\n      console.log(\"Sending request to /api/videos/upload\");\n      const response = await fetch(\"http://localhost:5000/api/videos/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      console.log(\"Response received:\", response);\n      if (!response.ok) {\n        throw new Error(\"Failed to process the video.\");\n      }\n      const data = await response.json();\n      console.log(\"Response data:\", data);\n\n      // Adjust based on the actual response structure\n      setProcessedVideo(data.video.editedFilePath); // If direct response\n      // setProcessedVideo(data.video.editedFilePath); // If wrapped response\n\n      // Update metadata\n      setVideoMetadata({\n        videoDuration: data.videoDuration,\n        // If direct response\n        processingTime: data.processingTime,\n        // If direct response\n        cutsMade: data.cutsMade,\n        // If direct response\n        requestId: data.requestId,\n        // If direct response\n        originalFilePath: data.originalFilePath,\n        // If direct response\n        editedFilePath: data.editedFilePath,\n        // If direct response\n        silenceDetails: data.silenceDetails,\n        // If direct response\n        fileSize: data.fileSize,\n        // If direct response\n        tags: data.tags // If direct response\n\n        // Uncomment the following lines if the response is wrapped\n        // videoDuration: data.video.videoDuration,\n        // processingTime: data.video.processingTime,\n        // cutsMade: data.video.cutsMade,\n        // requestId: data.video.requestId,\n        // originalFilePath: data.video.originalFilePath,\n        // editedFilePath: data.video.editedFilePath,\n        // silenceDetails: data.video.silenceDetails,\n        // fileSize: data.video.fileSize,\n        // tags: data.video.tags,\n      });\n    } catch (error) {\n      console.error(\"Error occurred:\", error);\n      setErrorMessage(\"An error occurred while processing the video. Please try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n    for (let pair of formData.entries()) {\n      console.log(`\\tForm Entries: ${pair[0]}, ${pair[1]}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-customBlue\",\n      children: \"Logo Should Be Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-row items-start space-y-4 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-zinc-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center space-y-4\",\n          children: [{\n            icon: VideoCameraIcon,\n            label: \"Video Silence Remover\"\n          }, {\n            icon: SparklesIcon,\n            label: \"Effects\"\n          }].map(({\n            icon: Icon,\n            label\n          }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              className: \"h-6 w-6 text-gray-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col m-2 pl-10 border-l-4 border-white-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold mb-4\",\n            children: \"Video Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VideoDropZone, {\n            onFilesAdded: handleFilesAdded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), videos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Uploaded Videos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\",\n              children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"relative rounded-lg overflow-hidden hover:cursor-pointer\",\n                onClick: () => setSelectedVideo(video.url),\n                children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                  url: video.url,\n                  controls: true,\n                  width: \"100%\",\n                  height: \"auto\",\n                  className: \"rounded-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-2 border-gray-300 shadow-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(VideoEditor, {\n              url: selectedVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"noiseLevel\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Noise Level (dB)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"noiseLevel\",\n                value: noiseLevel,\n                onChange: e => setNoiseLevel(e.target.value),\n                className: \"border border-gray-300 rounded px-2 py-1 mt-1\",\n                children: Array.from({\n                  length: 81\n                }, (_, i) => -90 + i).map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: level,\n                  children: [level, \" dB\"]\n                }, level, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"silenceDuration\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Silence Duration (seconds)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"silenceDuration\",\n                value: silenceDuration,\n                onChange: e => setSilenceDuration(e.target.value),\n                className: \"border border-gray-300 rounded px-2 py-1 mt-1\",\n                children: Array.from({\n                  length: 5\n                }, (_, i) => i + 1).map(duration => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: duration,\n                  children: [duration, \" seconds\"]\n                }, duration, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mt-2 p-2 bg-red-500 text-white rounded\",\n              onClick: handleSilenceVideo,\n              disabled: isProcessing,\n              children: isProcessing ? \"Processing...\" : \"Silence Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), processedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Processed Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              src: processedVideo,\n              className: \"mt-4 w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold\",\n                children: \"Video Metadata\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Video Duration:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.videoDuration]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Processing Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.processingTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cuts Made:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.cutsMade]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Request ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.requestId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Original File Path:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.originalFilePath]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Edited File Path:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.editedFilePath]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Silence Details:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 22\n                }, this), \" \", JSON.stringify(videoMetadata.silenceDetails)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"File Size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.fileSize]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Tags:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 22\n                }, this), \" \", videoMetadata.tags.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-red-500\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Process, \"yKndnc96iKOtldjPpX4WuQFVEyM=\");\n_c = Process;\nexport default Process;\nvar _c;\n$RefreshReg$(_c, \"Process\");","map":{"version":3,"names":["React","useState","VideoCameraIcon","SparklesIcon","ReactPlayer","VideoDropZone","VideoEditor","jsxDEV","_jsxDEV","Process","_s","videos","setVideos","selectedVideo","setSelectedVideo","processedVideo","setProcessedVideo","isProcessing","setIsProcessing","errorMessage","setErrorMessage","noiseLevel","setNoiseLevel","silenceDuration","setSilenceDuration","videoMetadata","setVideoMetadata","videoDuration","processingTime","cutsMade","requestId","originalFilePath","editedFilePath","silenceDetails","fileSize","tags","handleFilesAdded","files","newVideos","map","file","url","URL","createObjectURL","handleSilenceVideo","videoObject","find","video","formData","FormData","append","console","log","response","fetch","method","body","ok","Error","data","json","error","pair","entries","children","className","fileName","_jsxFileName","lineNumber","columnNumber","icon","label","Icon","index","onFilesAdded","length","onClick","controls","width","height","htmlFor","id","value","onChange","e","target","Array","from","_","i","level","duration","disabled","src","JSON","stringify","join","_c","$RefreshReg$"],"sources":["/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/process.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  VideoCameraIcon,\n  SparklesIcon,\n} from \"@heroicons/react/outline\";\nimport ReactPlayer from \"react-player\";\nimport VideoDropZone from \"./videoDropZone.jsx\";\nimport VideoEditor from \"./videoEditor.jsx\";\n\nconst Process = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Inputs for silence detection\n  const [noiseLevel, setNoiseLevel] = useState(\"-40\");\n  const [silenceDuration, setSilenceDuration] = useState(\"2\");\n\n  // Metadata fields for the video\n  const [videoMetadata, setVideoMetadata] = useState({\n    videoDuration: null,\n    processingTime: null,\n    cutsMade: null,\n    requestId: null,\n    originalFilePath: null,\n    editedFilePath: null,\n    silenceDetails: [],\n    fileSize: null,\n    tags: [],\n  });\n\n  const handleFilesAdded = (files) => {\n    const newVideos = files.map((file) => ({\n      file,\n      url: URL.createObjectURL(file),\n    }));\n    setVideos([...videos, ...newVideos]);\n  };\n\n  const handleSilenceVideo = async () => {\n    if (!selectedVideo) {\n      setErrorMessage(\"No video selected. Please select a video to process.\");\n      return;\n    }\n\n    const videoObject = videos.find((video) => video.url === selectedVideo);\n    if (!videoObject) {\n      setErrorMessage(\"Selected video not found. Please try again.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"name\", videoObject.file);\n    formData.append('noiseLevel', noiseLevel);\n    formData.append('silenceDuration', silenceDuration);\n\n    setIsProcessing(true);\n    setErrorMessage(null);\n\n    try {\n      console.log(\"Sending request to /api/videos/upload\");\n      const response = await fetch(\"http://localhost:5000/api/videos/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      console.log(\"Response received:\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to process the video.\");\n      }\n\n      const data = await response.json();\n      console.log(\"Response data:\", data);\n\n      // Adjust based on the actual response structure\n      setProcessedVideo(data.video.editedFilePath); // If direct response\n      // setProcessedVideo(data.video.editedFilePath); // If wrapped response\n\n      // Update metadata\n      setVideoMetadata({\n        videoDuration: data.videoDuration, // If direct response\n        processingTime: data.processingTime, // If direct response\n        cutsMade: data.cutsMade, // If direct response\n        requestId: data.requestId, // If direct response\n        originalFilePath: data.originalFilePath, // If direct response\n        editedFilePath: data.editedFilePath, // If direct response\n        silenceDetails: data.silenceDetails, // If direct response\n        fileSize: data.fileSize, // If direct response\n        tags: data.tags, // If direct response\n\n        // Uncomment the following lines if the response is wrapped\n        // videoDuration: data.video.videoDuration,\n        // processingTime: data.video.processingTime,\n        // cutsMade: data.video.cutsMade,\n        // requestId: data.video.requestId,\n        // originalFilePath: data.video.originalFilePath,\n        // editedFilePath: data.video.editedFilePath,\n        // silenceDetails: data.video.silenceDetails,\n        // fileSize: data.video.fileSize,\n        // tags: data.video.tags,\n      });\n    } catch (error) {\n      console.error(\"Error occurred:\", error);\n      setErrorMessage(\"An error occurred while processing the video. Please try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n    for (let pair of formData.entries()) {\n        console.log(`\\tForm Entries: ${pair[0]}, ${pair[1]}`);\n      }\n  };\n\n  return (\n    <div>\n      <div className=\"bg-customBlue\">Logo Should Be Here</div>\n      <div className=\"relative flex flex-row items-start space-y-4 p-4\">\n        <div className=\"flex bg-zinc-50\">\n          <div className=\"flex flex-col items-center space-y-4\">\n            {[\n              { icon: VideoCameraIcon, label: \"Video Silence Remover\" },\n              { icon: SparklesIcon, label: \"Effects\" },\n            ].map(({ icon: Icon, label }, index) => (\n              <div key={index} className=\"flex flex-col items-center space-y-1\">\n                <Icon className=\"h-6 w-6 text-gray-500\" />\n                <span className=\"text-gray-500\">{label}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"flex flex-col m-2 pl-10 border-l-4 border-white-500\">\n            <h1 className=\"text-2xl font-bold mb-4\">Video Upload</h1>\n            <VideoDropZone onFilesAdded={handleFilesAdded} />\n\n            {videos.length > 0 && (\n              <div className=\"mt-4\">\n                <h2 className=\"text-xl font-semibold\">Uploaded Videos</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\n                  {videos.map((video, index) => (\n                    <button\n                      key={index}\n                      className=\"relative rounded-lg overflow-hidden hover:cursor-pointer\"\n                      onClick={() => setSelectedVideo(video.url)}\n                    >\n                      <ReactPlayer\n                        url={video.url}\n                        controls\n                        width=\"100%\"\n                        height=\"auto\"\n                        className=\"rounded-lg\"\n                      />\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {selectedVideo && (\n              <div className=\"mt-4\">\n                <hr className=\"border-2 border-gray-300 shadow-lg\" />\n                <VideoEditor url={selectedVideo} />\n\n                <div className=\"mt-4\">\n                  <label htmlFor=\"noiseLevel\" className=\"block text-sm font-medium text-gray-700\">\n                    Noise Level (dB)\n                  </label>\n                  <select\n                    id=\"noiseLevel\"\n                    value={noiseLevel}\n                    onChange={(e) => setNoiseLevel(e.target.value)}\n                    className=\"border border-gray-300 rounded px-2 py-1 mt-1\"\n                  >\n                    {Array.from({ length: 81 }, (_, i) => -90 + i).map((level) => (\n                      <option key={level} value={level}>\n                        {level} dB\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"mt-4\">\n                  <label htmlFor=\"silenceDuration\" className=\"block text-sm font-medium text-gray-700\">\n                    Silence Duration (seconds)\n                  </label>\n                  <select\n                    id=\"silenceDuration\"\n                    value={silenceDuration}\n                    onChange={(e) => setSilenceDuration(e.target.value)}\n                    className=\"border border-gray-300 rounded px-2 py-1 mt-1\"\n                  >\n                    {Array.from({ length: 5 }, (_, i) => i + 1).map((duration) => (\n                      <option key={duration} value={duration}>\n                        {duration} seconds\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <button\n                  className=\"mt-2 p-2 bg-red-500 text-white rounded\"\n                  onClick={handleSilenceVideo}\n                  disabled={isProcessing}\n                >\n                  {isProcessing ? \"Processing...\" : \"Silence Video\"}\n                </button>\n              </div>\n            )}\n\n            {processedVideo && (\n              <div className=\"mt-4\">\n                <h2 className=\"text-xl font-semibold\">Processed Video</h2>\n                <video controls src={processedVideo} className=\"mt-4 w-full\" />\n                <div className=\"mt-4\">\n                  <h3 className=\"text-lg font-semibold\">Video Metadata</h3>\n                  <p><strong>Video Duration:</strong> {videoMetadata.videoDuration}</p>\n                  <p><strong>Processing Time:</strong> {videoMetadata.processingTime}</p>\n                  <p><strong>Cuts Made:</strong> {videoMetadata.cutsMade}</p>\n                  <p><strong>Request ID:</strong> {videoMetadata.requestId}</p>\n                  <p><strong>Original File Path:</strong> {videoMetadata.originalFilePath}</p>\n                  <p><strong>Edited File Path:</strong> {videoMetadata.editedFilePath}</p>\n                  <p><strong>Silence Details:</strong> {JSON.stringify(videoMetadata.silenceDetails)}</p>\n                  <p><strong>File Size:</strong> {videoMetadata.fileSize}</p>\n                  <p><strong>Tags:</strong> {videoMetadata.tags.join(', ')}</p>\n                </div>\n              </div>\n            )}\n\n            {errorMessage && (\n              <div className=\"mt-4 text-red-500\">\n                <p>{errorMessage}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Process;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}