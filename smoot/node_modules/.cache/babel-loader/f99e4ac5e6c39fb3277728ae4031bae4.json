{"ast":null,"code":"var _jsxFileName = \"/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/silencer.jsx\";\n// src/Silencer.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport VideoDropzone from './videoDropZone.jsx';\nimport VideoEditor from './videoEditor.jsx';\nconst Silencer = () => {\n  const [uploadedVideo, setUploadedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const handleFilesAdded = async files => {\n    setUploadedVideo(files[0]);\n    const formData = new FormData();\n    formData.append('video', files[0]);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([response.data]));\n      setProcessedVideo(url);\n    } catch (error) {\n      console.error('Error processing video:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"silencer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl font-bold text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Video Silence Remover\"), /*#__PURE__*/React.createElement(VideoDropzone, {\n    onFilesAdded: handleFilesAdded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), uploadedVideo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Uploaded Video: \", uploadedVideo.name), /*#__PURE__*/React.createElement(VideoEditor, {\n    url: URL.createObjectURL(uploadedVideo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), processedVideo && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Processed Video:\"), /*#__PURE__*/React.createElement(\"video\", {\n    controls: true,\n    src: processedVideo,\n    className: \"mt-4 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })));\n};\nexport default Silencer;","map":{"version":3,"names":["React","useState","axios","VideoDropzone","VideoEditor","Silencer","uploadedVideo","setUploadedVideo","processedVideo","setProcessedVideo","handleFilesAdded","files","formData","FormData","append","response","post","responseType","url","URL","createObjectURL","Blob","data","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onFilesAdded","name","controls","src"],"sources":["/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/silencer.jsx"],"sourcesContent":["// src/Silencer.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport VideoDropzone from './videoDropZone.jsx';\nimport VideoEditor from './videoEditor.jsx';\n\nconst Silencer = () => {\n  const [uploadedVideo, setUploadedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n\n  const handleFilesAdded = async (files) => {\n    setUploadedVideo(files[0]);\n    const formData = new FormData();\n    formData.append('video', files[0]);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(new Blob([response.data]));\n      setProcessedVideo(url);\n    } catch (error) {\n      console.error('Error processing video:', error);\n    }\n  };\n\n  return (\n    <div className=\"silencer\">\n      <h1 className=\"text-3xl font-bold text-center mt-4\">Video Silence Remover</h1>\n      <VideoDropzone onFilesAdded={handleFilesAdded} />\n      {uploadedVideo && (\n        <div className=\"mt-4\">\n          <p>Uploaded Video: {uploadedVideo.name}</p>\n          <VideoEditor url={URL.createObjectURL(uploadedVideo)} />\n        </div>\n      )}\n      {processedVideo && (\n        <div className=\"mt-4\">\n          <h2 className=\"text-2xl font-bold\">Processed Video:</h2>\n          <video controls src={processedVideo} className=\"mt-4 w-full\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Silencer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}