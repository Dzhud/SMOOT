{"ast":null,"code":"var _jsxFileName = \"/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/process.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { VideoCameraIcon, SparklesIcon } from \"@heroicons/react/outline\";\nimport ReactPlayer from 'react-player';\nimport VideoDropZone from './videoDropZone.jsx';\nimport VideoEditor from './videoEditor.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Process = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [silenceButtonVisible, setSilenceButtonVisible] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const handleFilesAdded = files => {\n    const newVideos = files.map(file => ({\n      file,\n      url: URL.createObjectURL(file)\n    }));\n    setVideos([...videos, ...newVideos]);\n    setSilenceButtonVisible(true); // Show the silence button when files are added\n  };\n  const handleSilenceVideo = async () => {\n    if (!selectedVideo) {\n      console.error('No video selected');\n      setErrorMessage('No video selected. Please select a video to process.');\n      return;\n    }\n    const videoObject = videos.find(video => video.url === selectedVideo);\n    if (!videoObject) {\n      console.error('Selected video not found in video list');\n      setErrorMessage('Selected video not found. Please try again.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('video', videoObject.file);\n    setIsProcessing(true);\n    setErrorMessage(null); // Clear any previous error\n\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to process the video.');\n      }\n      const data = await response.json();\n      const processedVideoUrl = `data:video/mp4;base64,${data.videoData}`; // Create a data URL\n      setProcessedVideo(processedVideoUrl);\n    } catch (error) {\n      console.error('Error processing video:', error);\n      setErrorMessage('An error occurred while processing the video. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-customBlue\",\n      children: \"Logo Should Be Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-row items-start space-y-4 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-zinc-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center space-y-4\",\n          children: [{\n            icon: VideoCameraIcon,\n            label: 'Video Silence Remover'\n          }, {\n            icon: SparklesIcon,\n            label: 'Effects'\n          }].map(({\n            icon: Icon,\n            label\n          }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              className: \"h-6 w-6 text-gray-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col m-2 pl-10 border-l-4 border-white-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold mb-4\",\n            children: \"Video Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VideoDropZone, {\n            onFilesAdded: handleFilesAdded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), videos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Uploaded Videos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\",\n              children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"relative rounded-lg overflow-hidden hover:cursor-pointer\",\n                onClick: () => setSelectedVideo(video.url),\n                children: [\" Edit\", /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                  url: video.url,\n                  controls: true,\n                  width: \"100%\",\n                  height: \"auto\",\n                  className: \"rounded-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              className: \"border-2 border-gray-300 shadow-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(VideoEditor, {\n              url: selectedVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), silenceButtonVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mt-2 p-2 bg-red-500 text-white rounded\",\n              onClick: handleSilenceVideo,\n              disabled: isProcessing,\n              children: isProcessing ? 'Processing...' : 'Silence Video'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), processedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Processed Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              src: processedVideo,\n              className: \"mt-4 w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-red-500\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Process, \"twiuSwrJZvkSrQfZ7b47VUp6Rb0=\");\n_c = Process;\nexport default Process;\nvar _c;\n$RefreshReg$(_c, \"Process\");","map":{"version":3,"names":["React","useState","VideoCameraIcon","SparklesIcon","ReactPlayer","VideoDropZone","VideoEditor","jsxDEV","_jsxDEV","Process","_s","videos","setVideos","selectedVideo","setSelectedVideo","processedVideo","setProcessedVideo","silenceButtonVisible","setSilenceButtonVisible","isProcessing","setIsProcessing","errorMessage","setErrorMessage","handleFilesAdded","files","newVideos","map","file","url","URL","createObjectURL","handleSilenceVideo","console","error","videoObject","find","video","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","processedVideoUrl","videoData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","icon","label","Icon","index","onFilesAdded","length","onClick","controls","width","height","disabled","src","_c","$RefreshReg$"],"sources":["/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/process.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n    VideoCameraIcon,\n    SparklesIcon\n} from \"@heroicons/react/outline\";\nimport ReactPlayer from 'react-player';\nimport VideoDropZone from './videoDropZone.jsx';\nimport VideoEditor from './videoEditor.jsx';\n\nconst Process = () => {\n    const [videos, setVideos] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [processedVideo, setProcessedVideo] = useState(null);\n    const [silenceButtonVisible, setSilenceButtonVisible] = useState(false);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleFilesAdded = (files) => {\n        const newVideos = files.map((file) => ({\n            file,\n            url: URL.createObjectURL(file)\n        }));\n        setVideos([...videos, ...newVideos]);\n        setSilenceButtonVisible(true); // Show the silence button when files are added\n    };\n\n    const handleSilenceVideo = async () => {\n        if (!selectedVideo) {\n            console.error('No video selected');\n            setErrorMessage('No video selected. Please select a video to process.');\n            return;\n        }\n\n        const videoObject = videos.find(video => video.url === selectedVideo);\n        if (!videoObject) {\n            console.error('Selected video not found in video list');\n            setErrorMessage('Selected video not found. Please try again.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('video', videoObject.file);\n\n        setIsProcessing(true);\n        setErrorMessage(null); // Clear any previous error\n\n        try {\n            const response = await fetch('http://localhost:5000/upload', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to process the video.');\n            }\n\n            const data = await response.json();\n            const processedVideoUrl = `data:video/mp4;base64,${data.videoData}`; // Create a data URL\n            setProcessedVideo(processedVideoUrl);\n        } catch (error) {\n            console.error('Error processing video:', error);\n            setErrorMessage('An error occurred while processing the video. Please try again.');\n        } finally {\n            setIsProcessing(false);\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"bg-customBlue\">Logo Should Be Here</div>\n            <div className=\"relative flex flex-row items-start space-y-4 p-4\">\n                <div className=\"flex bg-zinc-50\">\n                    <div className=\"flex flex-col items-center space-y-4\">\n                        {/* Sidebar Icons */}\n                        {[\n                            { icon: VideoCameraIcon, label: 'Video Silence Remover' },\n                            { icon: SparklesIcon, label: 'Effects' }\n                        ].map(({ icon: Icon, label }, index) => (\n                            <div key={index} className=\"flex flex-col items-center space-y-1\">\n                                <Icon className=\"h-6 w-6 text-gray-500\" />\n                                <span className=\"text-gray-500\">{label}</span>\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"flex flex-col m-2 pl-10 border-l-4 border-white-500\">\n                        <h1 className=\"text-2xl font-bold mb-4\">Video Upload</h1>\n                        <VideoDropZone onFilesAdded={handleFilesAdded} />\n\n                        {videos.length > 0 && (\n                            <div className=\"mt-4\">\n                                <h2 className=\"text-xl font-semibold\">Uploaded Videos</h2>\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\n                                    {videos.map((video, index) => (\n                                        <button \n                                            key={index} \n                                            className=\"relative rounded-lg overflow-hidden hover:cursor-pointer\"\n                                            onClick={() => setSelectedVideo(video.url)} \n                                        > Edit\n                                            <ReactPlayer url={video.url} controls width=\"100%\" height=\"auto\" className=\"rounded-lg\" />\n                                        </button>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n\n                        {selectedVideo && (\n                            <div className=\"mt-4\">\n                                <hr className=\"border-2 border-gray-300 shadow-lg\" />\n                                <VideoEditor url={selectedVideo} />\n                                {silenceButtonVisible && (\n                                    <button \n                                        className=\"mt-2 p-2 bg-red-500 text-white rounded\"\n                                        onClick={handleSilenceVideo}\n                                        disabled={isProcessing}\n                                    >\n                                        {isProcessing ? 'Processing...' : 'Silence Video'}\n                                    </button>\n                                )}\n                            </div>\n                        )}\n\n                        {processedVideo && (\n                            <div className=\"mt-4\">\n                                <h2 className=\"text-xl font-semibold\">Processed Video</h2>\n                                <video controls src={processedVideo} className=\"mt-4 w-full\" />\n                            </div>\n                        )}\n\n                        {errorMessage && (\n                            <div className=\"mt-4 text-red-500\">\n                                <p>{errorMessage}</p>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Process;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}