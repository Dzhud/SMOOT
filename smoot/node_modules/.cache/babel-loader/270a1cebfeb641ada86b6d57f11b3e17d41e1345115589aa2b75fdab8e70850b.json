{"ast":null,"code":"var _jsxFileName = \"/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/silencer.jsx\",\n  _s = $RefreshSig$();\n// src/Silencer.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport VideoDropzone from './videoDropZone.jsx';\nimport VideoEditor from './videoEditor.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Silencer = () => {\n  _s();\n  const [uploadedVideo, setUploadedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const handleFilesAdded = async files => {\n    setUploadedVideo(files[0]);\n    const formData = new FormData();\n    formData.append('video', files[0]);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([response.data]));\n      setProcessedVideo(url);\n    } catch (error) {\n      console.error('Error processing video:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"silencer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mt-4\",\n      children: \"Video Silence Remover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoDropzone, {\n      onFilesAdded: handleFilesAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), uploadedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Uploaded Video: \", uploadedVideo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VideoEditor, {\n        url: URL.createObjectURL(uploadedVideo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), processedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: \"Processed Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        src: processedVideo,\n        className: \"mt-4 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Silencer, \"VUtOHC4+AoaWiC1oN2RElfbB5qA=\");\n_c = Silencer;\nexport default Silencer;\nvar _c;\n$RefreshReg$(_c, \"Silencer\");","map":{"version":3,"names":["React","useState","axios","VideoDropzone","VideoEditor","jsxDEV","_jsxDEV","Silencer","_s","uploadedVideo","setUploadedVideo","processedVideo","setProcessedVideo","handleFilesAdded","files","formData","FormData","append","response","post","responseType","url","URL","createObjectURL","Blob","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilesAdded","name","controls","src","_c","$RefreshReg$"],"sources":["/Users/omotayo/Documents/Programmings/Reactz/SMOOT/smoot/src/components/silencer.jsx"],"sourcesContent":["// src/Silencer.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport VideoDropzone from './videoDropZone.jsx';\nimport VideoEditor from './videoEditor.jsx';\n\nconst Silencer = () => {\n  const [uploadedVideo, setUploadedVideo] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n\n  const handleFilesAdded = async (files) => {\n    setUploadedVideo(files[0]);\n    const formData = new FormData();\n    formData.append('video', files[0]);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(new Blob([response.data]));\n      setProcessedVideo(url);\n    } catch (error) {\n      console.error('Error processing video:', error);\n    }\n  };\n\n  return (\n    <div className=\"silencer\">\n      <h1 className=\"text-3xl font-bold text-center mt-4\">Video Silence Remover</h1>\n      <VideoDropzone onFilesAdded={handleFilesAdded} />\n      {uploadedVideo && (\n        <div className=\"mt-4\">\n          <p>Uploaded Video: {uploadedVideo.name}</p>\n          <VideoEditor url={URL.createObjectURL(uploadedVideo)} />\n        </div>\n      )}\n      {processedVideo && (\n        <div className=\"mt-4\">\n          <h2 className=\"text-2xl font-bold\">Processed Video:</h2>\n          <video controls src={processedVideo} className=\"mt-4 w-full\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Silencer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}